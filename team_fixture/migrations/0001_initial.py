# Generated by Django 3.2.5 on 2021-07-17 14:31

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rank', models.IntegerField()),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='TeamFixture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pub_date', models.DateTimeField(null=True, verbose_name='date published')),
                ('icon', models.ImageField(upload_to='icons', verbose_name='image')),
                ('name', models.CharField(max_length=256)),
                ('description', models.TextField(blank=True, default='', null=True)),
                ('rounds', models.IntegerField(default=0)),
                ('start_date', models.DateField(verbose_name='Start date')),
                ('matches_per_day', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('current_round', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='TeamPlayer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('number', models.IntegerField()),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teamplayers', to='team_fixture.team')),
            ],
        ),
        migrations.CreateModel(
            name='TeamMatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Match Date')),
                ('match_number', models.IntegerField(blank=True, null=True)),
                ('match_round', models.IntegerField()),
                ('status', models.CharField(choices=[('BYE', 'BYE'), ('Not Scheduled', 'Not Scheduled'), ('Scheduled', 'Scheduled'), ('Finished', 'Finished')], default='Not Scheduled', max_length=20)),
                ('team_1_score', models.PositiveIntegerField(blank=True, null=True)),
                ('team_2_score', models.PositiveIntegerField(blank=True, null=True)),
                ('fixture', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='matches', to='team_fixture.teamfixture')),
                ('left_previous', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='left_next_match', to='team_fixture.teammatch')),
                ('right_previous', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='right_next_match', to='team_fixture.teammatch')),
                ('team_1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='left_matches', to='team_fixture.team')),
                ('team_2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='right_matches', to='team_fixture.team')),
                ('winner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='matches_won', to='team_fixture.team')),
            ],
            options={
                'verbose_name_plural': 'Team Matches',
            },
        ),
        migrations.AddField(
            model_name='team',
            name='fixture',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teams', to='team_fixture.teamfixture'),
        ),
        migrations.AlterUniqueTogether(
            name='team',
            unique_together={('rank', 'fixture')},
        ),
    ]
